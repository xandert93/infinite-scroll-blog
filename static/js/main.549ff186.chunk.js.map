{"version":3,"sources":["contexts/globalContext.js","components/SinglePost.js","components/Posts.js","components/layout/Footer.js","components/layout/Header.js","components/layout/Loader.js","components/SearchBar.js","theme/GlobalStyle.js","App.js","reducer/actions.js","reducer/appReducer.js","contexts/GlobalProvider.js","index.js"],"names":["initialState","isLoading","fetchedPosts","filteredPosts","errMsg","globalContext","createContext","SinglePost","post","title","body","postNum","id","observePost","className","useState","revealPost","setRevealPost","observer","useRef","observePostId","useCallback","node","current","IntersectionObserver","intersectionHandler","observe","isIntersecting","disconnect","ref","styled","Posts","inputRef","useContext","setLoading","fetchPosts","observerRef","handleIntersection","threshold","includes","length","value","firstEntry","unobserve","target","map","Footer","href","rel","Header","h1","Loader","fadeIn","keyframes","bounce","SearchBar","filterPosts","userInput","setUserInput","useEffect","onChange","e","placeholder","style","pointerEvents","createGlobalStyle","App","GlobalStyle","SET_LOADING","GET_POSTS","FILTER_POSTS","SET_ERR_MSG","appReducer","state","action","type","payload","filter","pageNumber","GlobalProvider","children","useReducer","dispatch","a","axios","get","res","setTimeout","data","message","toLowerCase","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.549ff186.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const initialState = {\r\n  isLoading: true, //start true so to prevent extra re-render of Provider\r\n  fetchedPosts: [],\r\n  filteredPosts: [],\r\n  errMsg: null,\r\n};\r\n\r\nexport const globalContext = createContext();\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nlet SinglePost = ({\r\n  post: { title, body, id: postNum },\r\n  observePost,\r\n  className,\r\n}) => {\r\n  const [revealPost, setRevealPost] = useState(false);\r\n\r\n  const observer = useRef();\r\n\r\n  const observePostId = useCallback((node) => {\r\n    if (!node) return;\r\n    observer.current = new IntersectionObserver(intersectionHandler);\r\n    observer.current.observe(node);\r\n  }, []);\r\n\r\n  const intersectionHandler = ([entry]) => {\r\n    if (!entry.isIntersecting) return;\r\n    setRevealPost(true);\r\n    observer.current.disconnect();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={observePost}\r\n      className={`${className} ${revealPost ? '' : 'hidden'}`}\r\n    >\r\n      <div ref={observePostId} className=\"id\">\r\n        {postNum}\r\n      </div>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"body\">{body}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePost = styled(SinglePost)`\r\n  position: relative;\r\n  width: 95%;\r\n  padding: 1.6rem;\r\n  border-radius: var(--bord-rad-sm);\r\n  background: rgba(0, 90, 225, 0.193);\r\n  box-shadow: var(--box-shad-sm);\r\n  transition: opacity 1.5s, transform 1.5s;\r\n\r\n  &.hidden {\r\n    opacity: 0;\r\n    transform: translateY(100%);\r\n  }\r\n\r\n  .id {\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 3rem;\r\n    width: 3rem;\r\n    left: -0.7rem;\r\n    top: -0.7rem;\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    border-radius: 50%;\r\n    border: 1px solid white;\r\n    background: linear-gradient(90deg, rgb(2, 1, 56), black 90%);\r\n  }\r\n\r\n  .title {\r\n    font-size: 1.8rem;\r\n    font-weight: 700;\r\n    text-transform: capitalize;\r\n    font-style: italic;\r\n    padding-bottom: 1.5rem;\r\n  }\r\n\r\n  .body {\r\n    font-size: 1.5rem;\r\n    color: rgba(255, 255, 255, 0.85);\r\n    line-height: 1.7rem;\r\n  }\r\n`;\r\n","import React, { useCallback, useContext, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { globalContext } from '../contexts/globalContext';\r\nimport SinglePost from './SinglePost';\r\n\r\nlet Posts = ({ inputRef, className }) => {\r\n  const { filteredPosts, setLoading, fetchPosts } = useContext(globalContext);\r\n\r\n  const observerRef = useRef();\r\n\r\n  const observePost = useCallback(\r\n    (node) => {\r\n      if (!node) return;\r\n      observerRef.current = new IntersectionObserver(handleIntersection, {\r\n        threshold: 1,\r\n      });\r\n      if ([0, 100].includes(filteredPosts.length) || inputRef.current.value)\r\n        return;\r\n      else observerRef.current.observe(node);\r\n    },\r\n    [filteredPosts]\r\n  );\r\n\r\n  const handleIntersection = ([firstEntry]) => {\r\n    if (!firstEntry.isIntersecting || inputRef.current.value) return;\r\n    setLoading();\r\n    fetchPosts();\r\n    observerRef.current.unobserve(firstEntry.target);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {filteredPosts.map((post) => (\r\n        <SinglePost\r\n          key={post.id}\r\n          post={post}\r\n          observePost={post.id === filteredPosts.length ? observePost : null}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts = styled(Posts)`\r\n  height: 65vh;\r\n\r\n  @media only screen and (min-width: 17.5em) and (min-height: 40em) {\r\n    height: 68vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    height: 69vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 45em) {\r\n    height: 71vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 25em) and (min-height: 50em) {\r\n    height: 71vh;\r\n  }\r\n\r\n  margin: 0 auto;\r\n  overflow-y: scroll;\r\n  padding: 1rem 0 1rem 6vw;\r\n\r\n  & > :not(:last-child) {\r\n    margin-bottom: var(--margin-sm);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nlet Footer = ({ className }) => (\r\n  <footer className={className} title=\"Visit GitHub page\">\r\n    &copy;{' '}\r\n    <a\r\n      className=\"link-github\"\r\n      href=\"https://github.com/xandert93\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      xandert.93\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer = styled(Footer)`\r\n  position: fixed;\r\n  bottom: 4vh;\r\n  left: 50%;\r\n  transform: translate(-50%, 50%);\r\n  font-size: 1.6rem;\r\n\r\n  .link-github {\r\n    color: inherit;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nconst Header = styled.h1`\r\n  font-size: 2.8rem;\r\n  letter-spacing: 3px;\r\n  height: 15vh;\r\n  padding-top: 2.5rem;\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    height: 13vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 45em) {\r\n    height: 10vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 25em) and (min-height: 45em) {\r\n    height: 12vh;\r\n  }\r\n`;\r\n\r\nexport default Header;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nlet Loader = ({ className }) => (\r\n  <div className={className}>\r\n    <div className=\"circle\"></div>\r\n    <div className=\"circle\"></div>\r\n    <div className=\"circle\"></div>\r\n  </div>\r\n);\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(3rem);\r\n  }\r\n  to {\r\n    opacity: initial;\r\n    transform: initial;\r\n  }`;\r\n\r\nconst bounce = keyframes`\r\n  0%,\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n  50% {\r\n    transform: translateY(-5px);\r\n  }`;\r\n\r\nexport default Loader = styled(Loader)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 5vh;\r\n  transition: opacity 0.3s ease-in;\r\n  animation: ${fadeIn} 1s;\r\n\r\n  .circle {\r\n    border-radius: 50%;\r\n    height: 0.6rem;\r\n    width: 0.6rem;\r\n    margin: 0 4px;\r\n    background: white;\r\n    animation: ${bounce} 0.5s ease-in infinite;\r\n  }\r\n\r\n  .circle:nth-of-type(2) {\r\n    animation-delay: 0.1s;\r\n  }\r\n\r\n  .circle:nth-of-type(3) {\r\n    animation-delay: 0.2s;\r\n  }\r\n`;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { globalContext } from '../contexts/globalContext';\r\n\r\nlet SearchBar = ({ inputRef, className }) => {\r\n  let { filterPosts, isLoading } = useContext(globalContext);\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  useEffect(() => filterPosts(userInput), [userInput]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <input\r\n        ref={inputRef}\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n        className=\"search-input\"\r\n        placeholder=\"Filter results...\"\r\n        style={{ pointerEvents: `${isLoading ? 'none' : ''}` }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar = styled(SearchBar)`\r\n  height: 10vh;\r\n\r\n  @media only screen and (min-width: 17.5em) and (min-height: 40em) {\r\n    height: 7vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    height: 8vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 45em) {\r\n    height: 7vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 25em) and (min-height: 50em) {\r\n    height: 7vh;\r\n  }\r\n\r\n  .search-input {\r\n    margin: 0 auto;\r\n    width: 80%;\r\n    height: 3rem;\r\n    max-width: 50rem;\r\n    transform: scale(0.93);\r\n    border: 3px solid rgb(255, 255, 255);\r\n    border-radius: var(--bord-rad-sm);\r\n    font-size: 1.6rem;\r\n    text-align: center;\r\n    transition: transform 0.3s, border-color 0.6s;\r\n  }\r\n\r\n  .search-input::placeholder {\r\n    color: rgb(95, 95, 95);\r\n  }\r\n\r\n  .search-input:focus {\r\n    outline: none;\r\n    border-color: rgb(46, 189, 255);\r\n    transform: scale(1);\r\n  }\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n\r\n\r\n\r\nhtml {\r\n  font-size: 62.5%;\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    font-size: 75%;\r\n  }\r\n  @media only screen and (min-width: 25em) and (min-height: 45em) {\r\n    font-size: 81.25%;\r\n  }\r\n\r\n  @media only screen and (min-width: 30em) {\r\n    font-size: 81.25%;\r\n  }\r\n\r\n  @media only screen and (min-width: 35em) {\r\n    font-size: 87.5%;\r\n  }\r\n  @media only screen and (min-width: 45em) {\r\n    font-size: 93.75%;\r\n  }\r\n  @media only screen and (min-width: 55em) {\r\n    font-size: 100%;\r\n  }\r\n  @media only screen and (min-width: 65em) {\r\n    font-size: 106.25%;\r\n  }\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  box-sizing: border-box;\r\n  font-family: 'Questrial', sans-serif;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n#root {\r\n  height: 100vh;\r\n  background: linear-gradient(180deg, rgb(0, 77, 192), black 60%) no-repeat;\r\n  overflow: hidden;\r\n}\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 0.5rem;\r\n  /* display: none; */\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: rgba(255, 255, 255, 0.5);\r\n  border-radius: 5px;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: white;\r\n}\r\n\r\n`;\r\n","import './App.css';\r\nimport Posts from './components/Posts';\r\nimport Footer from './components/layout/Footer';\r\nimport Header from './components/layout/Header';\r\nimport Loader from './components/layout/Loader';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nimport { useContext, useEffect, useRef } from 'react';\r\nimport { globalContext } from './contexts/globalContext';\r\nimport GlobalStyle from './theme/GlobalStyle';\r\n\r\nconst App = () => {\r\n  const { isLoading, filteredPosts, fetchPosts } = useContext(globalContext);\r\n  const inputRef = useRef();\r\n\r\n  useEffect(fetchPosts, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header>Infinite Scroll Blog</Header>\r\n      <SearchBar inputRef={inputRef} />\r\n      {filteredPosts.length === 0 && isLoading && <Loader />}\r\n      {filteredPosts.length > 0 && (\r\n        <>\r\n          <Posts inputRef={inputRef} />\r\n          {isLoading && <Loader />}\r\n        </>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const SET_LOADING = 'SET_LOADING';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const FILTER_POSTS = 'FILTER_POSTS';\r\nexport const SET_ERR_MSG = 'SET_ERR_MSG';\r\n","import { SET_LOADING, GET_POSTS, FILTER_POSTS, SET_ERR_MSG } from './actions';\r\n\r\nexport const appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        fetchedPosts: [...state.fetchedPosts, ...action.payload],\r\n        filteredPosts: [...state.fetchedPosts, ...action.payload],\r\n      };\r\n    case FILTER_POSTS:\r\n      return {\r\n        ...state,\r\n        filteredPosts: state.fetchedPosts.filter(\r\n          ({ title, body }) =>\r\n            title.includes(action.payload) || body.includes(action.payload)\r\n        ),\r\n      };\r\n    case SET_ERR_MSG:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        fetchedPosts: [],\r\n        errMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { globalContext, initialState } from './globalContext';\r\nimport { useCallback, useReducer } from 'react';\r\nimport { appReducer } from '../reducer/appReducer';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  GET_POSTS,\r\n  SET_ERR_MSG,\r\n  FILTER_POSTS,\r\n  SET_LOADING,\r\n} from '../reducer/actions';\r\n\r\nlet pageNumber = 1;\r\nlet baseUrl = 'https://jsonplaceholder.typicode.com/posts?_limit=10&_page=';\r\n\r\nconst GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const { fetchedPosts } = state;\r\n\r\n  const fetchPosts = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(baseUrl + pageNumber);\r\n\r\n      setTimeout(\r\n        () => {\r\n          dispatch({ type: GET_POSTS, payload: res.data });\r\n          pageNumber++;\r\n        },\r\n        fetchedPosts.length === 0 ? 3000 : 2000\r\n      );\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SET_ERR_MSG,\r\n        payload: `There was an error: ${err.message}.`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const setLoading = useCallback(() => dispatch({ type: SET_LOADING }), []);\r\n\r\n  const filterPosts = useCallback(\r\n    (userInput) =>\r\n      dispatch({\r\n        type: FILTER_POSTS,\r\n        payload: userInput.toLowerCase(),\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <globalContext.Provider\r\n      value={{ ...state, fetchPosts, setLoading, filterPosts }}\r\n    >\r\n      {children}\r\n    </globalContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GlobalProvider };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalProvider } from './contexts/GlobalProvider';\n\nReactDOM.render(\n  <GlobalProvider>\n    <App />\n  </GlobalProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}