{"version":3,"sources":["contexts/globalContext.js","components/SinglePost.js","components/Posts.js","components/layout/Footer.js","components/layout/Header.js","components/layout/Loader.js","components/SearchBar.js","App.js","reducer/actions.js","reducer/appReducer.js","contexts/GlobalProvider.js","index.js"],"names":["initialState","isLoading","fetchedPosts","filteredPosts","errMsg","globalContext","createContext","SinglePost","title","body","postNum","observePost","useState","revealPost","setRevealPost","observer","useRef","observePostId","useCallback","node","current","IntersectionObserver","intersectionHandler","observe","isIntersecting","disconnect","ref","className","Posts","inputRef","useContext","setLoading","fetchPosts","console","log","observerRef","handleIntersection","threshold","includes","length","value","firstEntry","unobserve","target","map","id","Footer","href","rel","Header","Loader","SearchBar","filterPosts","userInput","setUserInput","useEffect","onChange","e","placeholder","style","pointerEvents","App","SET_LOADING","GET_POSTS","FILTER_POSTS","SET_ERR_MSG","appReducer","state","action","type","payload","filter","pageNumber","GlobalProvider","children","useReducer","dispatch","a","axios","get","res","setTimeout","data","message","toLowerCase","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10856b4e.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const initialState = {\r\n  isLoading: true, //start true so to prevent extra re-render of Provider\r\n  fetchedPosts: [],\r\n  filteredPosts: [],\r\n  errMsg: null,\r\n};\r\n\r\nexport const globalContext = createContext();\r\n","import React, { useCallback, useRef, useState } from 'react';\r\n\r\nconst SinglePost = ({ title, body, postNum, observePost }) => {\r\n  const [revealPost, setRevealPost] = useState(false);\r\n\r\n  const observer = useRef();\r\n\r\n  const observePostId = useCallback((node) => {\r\n    if (!node) return;\r\n    observer.current = new IntersectionObserver(intersectionHandler);\r\n    observer.current.observe(node);\r\n  }, []);\r\n\r\n  const intersectionHandler = ([entry]) => {\r\n    if (!entry.isIntersecting) return;\r\n    setRevealPost(true);\r\n    observer.current.disconnect();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={observePost}\r\n      className={`post ${revealPost ? '' : 'post--hidden'}`}\r\n    >\r\n      <div ref={observePostId} className=\"post__id\">\r\n        {postNum}\r\n      </div>\r\n      <div className=\"post__title\">{title}</div>\r\n      <div className=\"post__body\">{body}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","import React, { useCallback, useContext, useRef } from 'react';\r\nimport { globalContext } from '../contexts/globalContext';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst Posts = ({ inputRef }) => {\r\n  const { filteredPosts, setLoading, fetchPosts } = useContext(globalContext);\r\n\r\n  console.log(filteredPosts);\r\n\r\n  const observerRef = useRef();\r\n\r\n  const observePost = useCallback(\r\n    (node) => {\r\n      if (!node) return;\r\n      observerRef.current = new IntersectionObserver(handleIntersection, {\r\n        threshold: 1,\r\n      });\r\n      if ([0, 100].includes(filteredPosts.length) || inputRef.current.value)\r\n        return;\r\n      else observerRef.current.observe(node);\r\n    },\r\n    [filteredPosts]\r\n  );\r\n\r\n  const handleIntersection = ([firstEntry]) => {\r\n    if (!firstEntry.isIntersecting || inputRef.current.value) return;\r\n    setLoading();\r\n    fetchPosts();\r\n    observerRef.current.unobserve(firstEntry.target);\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      {filteredPosts.map(({ id, title, body }) => (\r\n        <SinglePost\r\n          key={id}\r\n          postNum={id}\r\n          title={title}\r\n          body={body}\r\n          observePost={id === filteredPosts.length ? observePost : null}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\" title=\"Visit GitHub page\">\r\n    &copy;{' '}\r\n    <a\r\n      className=\"link--github\"\r\n      href=\"https://github.com/xandert93\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      xandert.93\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Header = () => <h1 className=\"header\">Infinite Scroll Blog</h1>;\r\n\r\nexport default Header;\r\n","const Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"circle\"></div>\r\n      <div className=\"circle\"></div>\r\n      <div className=\"circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { globalContext } from '../contexts/globalContext';\r\n\r\nconst SearchBar = ({ inputRef }) => {\r\n  let { filterPosts, isLoading } = useContext(globalContext);\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  useEffect(() => filterPosts(userInput), [userInput]);\r\n\r\n  return (\r\n    <div className=\"search-input-container\">\r\n      <input\r\n        ref={inputRef}\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n        className=\"search-input\"\r\n        placeholder=\"Filter results...\"\r\n        style={{ pointerEvents: `${isLoading ? 'none' : ''}` }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import './App.scss';\nimport Posts from './components/Posts';\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Loader from './components/layout/Loader';\nimport SearchBar from './components/SearchBar';\n\nimport { useContext, useEffect, useRef } from 'react';\nimport { globalContext } from './contexts/globalContext';\n\nconst App = () => {\n  const { isLoading, filteredPosts, fetchPosts } = useContext(globalContext);\n  const inputRef = useRef();\n\n  useEffect(fetchPosts, []);\n\n  return (\n    <>\n      <Header />\n      <SearchBar inputRef={inputRef} />\n      {filteredPosts.length === 0 && isLoading && <Loader />}\n      {filteredPosts.length > 0 && (\n        <>\n          <Posts inputRef={inputRef} />\n          {isLoading && <Loader />}\n        </>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","export const SET_LOADING = 'SET_LOADING';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const FILTER_POSTS = 'FILTER_POSTS';\r\nexport const SET_ERR_MSG = 'SET_ERR_MSG';\r\n","import { SET_LOADING, GET_POSTS, FILTER_POSTS, SET_ERR_MSG } from './actions';\r\n\r\nexport const appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        fetchedPosts: [...state.fetchedPosts, ...action.payload],\r\n        filteredPosts: [...state.fetchedPosts, ...action.payload],\r\n      };\r\n    case FILTER_POSTS:\r\n      return {\r\n        ...state,\r\n        filteredPosts: state.fetchedPosts.filter(\r\n          ({ title, body }) =>\r\n            title.includes(action.payload) || body.includes(action.payload)\r\n        ),\r\n      };\r\n    case SET_ERR_MSG:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        fetchedPosts: [],\r\n        errMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { globalContext, initialState } from './globalContext';\r\nimport { useCallback, useReducer } from 'react';\r\nimport { appReducer } from '../reducer/appReducer';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  GET_POSTS,\r\n  SET_ERR_MSG,\r\n  FILTER_POSTS,\r\n  SET_LOADING,\r\n} from '../reducer/actions';\r\n\r\nlet pageNumber = 1;\r\nlet baseUrl = 'https://jsonplaceholder.typicode.com/posts?_limit=10&_page=';\r\n\r\nconst GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const { fetchedPosts } = state;\r\n\r\n  const fetchPosts = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(baseUrl + pageNumber);\r\n\r\n      setTimeout(\r\n        () => {\r\n          dispatch({ type: GET_POSTS, payload: res.data });\r\n          pageNumber++;\r\n        },\r\n        fetchedPosts.length === 0 ? 3000 : 2000\r\n      );\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SET_ERR_MSG,\r\n        payload: `There was an error: ${err.message}.`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const setLoading = useCallback(() => dispatch({ type: SET_LOADING }), []);\r\n\r\n  const filterPosts = useCallback(\r\n    (userInput) =>\r\n      dispatch({\r\n        type: FILTER_POSTS,\r\n        payload: userInput.toLowerCase(),\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <globalContext.Provider\r\n      value={{ ...state, fetchPosts, setLoading, filterPosts }}\r\n    >\r\n      {children}\r\n    </globalContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GlobalProvider };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalProvider } from './contexts/GlobalProvider';\n\nReactDOM.render(\n  <GlobalProvider>\n    <App />\n  </GlobalProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}