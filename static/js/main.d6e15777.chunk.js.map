{"version":3,"sources":["reducer/actions.js","reducer/appReducer.js","contexts/GlobalContext.js","customHooks/usePostsFetch.js","components/PostContainer.js","components/PostsContainer.js","components/Footer.js","components/Header.js","customHooks/usePostsFetchMore.js","components/Loader.js","customHooks/useSearchChange.js","components/SearchInputContainer.js","App.js","index.js"],"names":["ACTIONS","appReducer","state","action","type","posts","payload","filteredPosts","urlPage","base_url","filter","title","body","includes","hasError","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","usePostsFetch","useEffect","setTimeout","get","then","response","data","catch","err","PostContainer","postNum","className","PostsContainer","useContext","length","map","id","Footer","href","target","rel","Header","usePostsFetchMore","useState","showLoader","setShowLoader","document","querySelector","lastPost","querySelectorAll","myObserver","IntersectionObserver","entries","isIntersecting","unobserve","threshold","observe","Loader","useSearchChange","searchField","setSearchField","toLowerCase","e","SearchInputContainer","handleSearchChange","inputRef","useRef","ref","onChange","placeholder","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d6e15777.chunk.js","sourcesContent":["const ACTIONS = {\r\n  MAKE_REQUEST: \"MAKE_REQUEST\",\r\n  SEARCH_CHANGE: \"SEARCH_CHANGE\",\r\n  GET_POSTS: \"GET_POSTS\",\r\n  ERROR: \"ERROR\",\r\n  GET_MORE_POSTS: \"GET_MORE_POSTS\",\r\n};\r\n\r\nexport { ACTIONS };\r\n","import { ACTIONS } from \"./actions\";\r\n\r\nconst appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, ...action.payload],\r\n        filteredPosts: [...state.posts, ...action.payload],\r\n      };\r\n    case ACTIONS.GET_MORE_POSTS:\r\n      return {\r\n        ...state,\r\n        urlPage: state.urlPage + 1,\r\n        base_url: `https://jsonplaceholder.typicode.com/posts?_limit=4&_page=${\r\n          state.urlPage + 1\r\n        }`,\r\n      };\r\n    case ACTIONS.SEARCH_CHANGE:\r\n      return {\r\n        ...state,\r\n        filteredPosts: state.posts.filter(({ title, body }) => {\r\n          return (\r\n            title.includes(action.payload) || body.includes(action.payload)\r\n          );\r\n        }),\r\n      };\r\n    case ACTIONS.ERROR:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        hasError: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { appReducer };\r\n","import { createContext, useReducer } from \"react\";\r\nimport { appReducer } from \"../reducer/appReducer\";\r\n\r\nlet initialState = {\r\n  urlPage: 1,\r\n  base_url: `https://jsonplaceholder.typicode.com/posts?_limit=4&_page=1`,\r\n  posts: [],\r\n  filteredPosts: [],\r\n  hasError: false,\r\n};\r\n\r\nconst GlobalContext = createContext(initialState);\r\n\r\nconst GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GlobalContext, GlobalProvider };\r\n","import { useEffect } from \"react\";\r\nimport { get } from \"axios\";\r\n\r\nconst usePostsFetch = (base_url, dispatch) => {\r\n  useEffect(\r\n    () =>\r\n      setTimeout(() => {\r\n        get(base_url)\r\n          .then((response) => {\r\n            dispatch({ type: \"GET_POSTS\", payload: response.data });\r\n          })\r\n          .catch((err) =>\r\n            dispatch({ type: \"ERROR\", payload: \"There was an error.\" })\r\n          );\r\n      }, 700),\r\n    [base_url, dispatch]\r\n  );\r\n};\r\n\r\nexport default usePostsFetch;\r\n","import React from \"react\";\r\n\r\nfunction PostContainer({ title, body, postNum }) {\r\n  return (\r\n    <div className=\"post-container\">\r\n      <div className=\"post-id\">{postNum}</div>\r\n      <div className=\"post-title\">{title}</div>\r\n      <div className=\"post-body\">{body}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostContainer;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../contexts/GlobalContext\";\r\nimport usePostsFetch from \"../customHooks/usePostsFetch\";\r\nimport PostContainer from \"./PostContainer\";\r\n\r\nconst PostsContainer = () => {\r\n  const { state, dispatch } = useContext(GlobalContext);\r\n  let { filteredPosts, hasError, base_url } = state;\r\n\r\n  usePostsFetch(base_url, dispatch);\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      {filteredPosts.length === 0 ? (\r\n        <h3>LOADING...</h3>\r\n      ) : hasError ? (\r\n        <h3>Please try refreshing</h3>\r\n      ) : (\r\n        filteredPosts.map(({ id, title, body }) => (\r\n          <PostContainer key={id} postNum={id} title={title} body={body} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsContainer;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\" title=\"Visit GitHub page\">\r\n      &copy;{\" \"}\r\n      <a\r\n        href=\"https://github.com/xandert93\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        xandert.93\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1 className=\"header\">My Blog</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../contexts/GlobalContext\";\r\n\r\nconst usePostsFetchMore = () => {\r\n  let { state, dispatch } = useContext(GlobalContext);\r\n  let { filteredPosts } = state;\r\n  const [showLoader, setShowLoader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      filteredPosts.length !== 0 &&\r\n      document.querySelector(\"input\").value === \"\" &&\r\n      filteredPosts.length !== 100\r\n    ) {\r\n      let allPosts = document.querySelectorAll(\".post-container\");\r\n      let lastPost = allPosts[filteredPosts.length - 1];\r\n      const handleIntersection = (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          dispatch({ type: \"GET_MORE_POSTS\" });\r\n          setShowLoader(true);\r\n          setTimeout(setShowLoader, 500, false);\r\n          myObserver.unobserve(lastPost);\r\n        }\r\n      };\r\n      let myObserver = new IntersectionObserver(handleIntersection, {\r\n        threshold: 1,\r\n      });\r\n      myObserver.observe(lastPost);\r\n    }\r\n  }, [filteredPosts]);\r\n\r\n  return [showLoader];\r\n};\r\n\r\nexport default usePostsFetchMore;\r\n","import usePostsFetchMore from \"../customHooks/usePostsFetchMore\";\r\n\r\nconst Loader = () => {\r\n  let [showLoader] = usePostsFetchMore();\r\n  return (\r\n    <div className={`loader ${showLoader && \"show\"}`}>\r\n      <div className=\"circle\"></div>\r\n      <div className=\"circle\"></div>\r\n      <div className=\"circle\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useSearchChange = (dispatch) => {\r\n  const [searchField, setSearchField] = useState(\"\");\r\n\r\n  const handleSearchChange = (e) => setSearchField(e.target.value);\r\n\r\n  useEffect(\r\n    () =>\r\n      dispatch({\r\n        type: \"SEARCH_CHANGE\",\r\n        payload: searchField.toLowerCase(),\r\n      }),\r\n    [searchField]\r\n  );\r\n\r\n  return [searchField, handleSearchChange];\r\n};\r\n\r\nexport default useSearchChange;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport { GlobalContext } from \"../contexts/GlobalContext\";\r\nimport useSearchChange from \"../customHooks/useSearchChange\";\r\n\r\nconst SearchInputContainer = () => {\r\n  let { dispatch } = useContext(GlobalContext);\r\n  const [searchField, handleSearchChange] = useSearchChange(dispatch);\r\n  const inputRef = useRef();\r\n\r\n  return (\r\n    <div className=\"search-input-container\">\r\n      <input\r\n        ref={inputRef}\r\n        value={searchField}\r\n        onChange={handleSearchChange}\r\n        className=\"search-input\"\r\n        placeholder=\"Filter results...\"\r\n      />\r\n      <button className=\"search-btn\">\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInputContainer;\r\n","import \"./App.css\";\nimport PostsContainer from \"./components/PostsContainer\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport SearchInputContainer from \"./components/SearchInputContainer\";\n\nimport { GlobalProvider } from \"./contexts/GlobalContext\";\n\nconst App = () => (\n  <GlobalProvider>\n    <Header />\n    <SearchInputContainer />\n    <PostsContainer />\n    <Loader />\n    <Footer />\n  </GlobalProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}