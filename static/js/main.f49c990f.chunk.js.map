{"version":3,"sources":["contexts/globalContext.js","components/SinglePost.js","components/Posts.js","components/layout/Footer.js","components/layout/Header.js","components/layout/Loader.js","components/SearchBar.js","theme/GlobalStyle.js","App.js","reducer/actions.js","reducer/appReducer.js","contexts/GlobalProvider.js","index.js"],"names":["initialState","isLoading","fetchedPosts","filteredPosts","errMsg","globalContext","createContext","PostContainer","styled","div","show","PostId","PostTitle","PostBody","SinglePost","post","title","body","postNum","id","observePost","useState","revealPost","setRevealPost","observer","useRef","observePostId","useCallback","node","current","IntersectionObserver","intersectionHandler","observe","isIntersecting","disconnect","ref","PostsContainer","Posts","inputRef","useContext","setLoading","fetchPosts","length","value","threshold","firstEntry","unobserve","target","map","StyledFooter","footer","attrs","Link","a","rel","GitHubLink","href","Footer","StyledHeader","h1","Header","fadeIn","keyframes","LoaderContainer","bounce","Circle","CircleTwo","CircleThree","Loader","SearchInputBox","SearchInput","input","placeholder","SearchBar","filterPosts","userInput","setUserInput","useEffect","onChange","e","createGlobalStyle","App","GlobalStyle","SET_LOADING","GET_POSTS","FILTER_POSTS","SET_ERR_MSG","appReducer","state","action","type","payload","filter","includes","pageNumber","GlobalProvider","children","useReducer","dispatch","axios","get","res","setTimeout","data","message","toLowerCase","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f49c990f.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const initialState = {\r\n  isLoading: true, //start true so to prevent extra re-render of Provider\r\n  fetchedPosts: [],\r\n  filteredPosts: [],\r\n  errMsg: null,\r\n};\r\n\r\nexport const globalContext = createContext();\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PostContainer = styled.div`\r\n  position: relative;\r\n  width: 95%;\r\n  padding: 1.6rem;\r\n  border-radius: var(--bord-rad-sm);\r\n  background: rgba(0, 90, 225, 0.193);\r\n  box-shadow: var(--box-shad-sm);\r\n  opacity: ${({ show }) => (show ? 1 : 0)};\r\n  transform: translateY(${({ show }) => (show ? 0 : '100%')});\r\n  transition: opacity 1.5s, transform 1.5s;\r\n`;\r\n\r\nconst PostId = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 3rem;\r\n  width: 3rem;\r\n  left: -0.7rem;\r\n  top: -0.7rem;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  border-radius: 50%;\r\n  border: 1px solid white;\r\n  background: linear-gradient(90deg, rgb(2, 1, 56), black 90%);\r\n`;\r\n\r\nconst PostTitle = styled.div`\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  text-transform: capitalize;\r\n  font-style: italic;\r\n  padding-bottom: 1.5rem;\r\n`;\r\n\r\nconst PostBody = styled.div`\r\n  font-size: 1.5rem;\r\n  color: rgba(255, 255, 255, 0.85);\r\n  line-height: 1.7rem;\r\n`;\r\n\r\nconst SinglePost = ({ post: { title, body, id: postNum }, observePost }) => {\r\n  const [revealPost, setRevealPost] = useState(false);\r\n\r\n  const observer = useRef();\r\n\r\n  const observePostId = useCallback((node) => {\r\n    if (!node) return;\r\n    observer.current = new IntersectionObserver(intersectionHandler);\r\n    observer.current.observe(node);\r\n  }, []);\r\n\r\n  const intersectionHandler = ([entry]) => {\r\n    if (!entry.isIntersecting) return;\r\n    setRevealPost(true);\r\n    observer.current.disconnect();\r\n  };\r\n\r\n  return (\r\n    <PostContainer ref={observePost} show={revealPost}>\r\n      <PostId ref={observePostId}>{postNum}</PostId>\r\n      <PostTitle>{title}</PostTitle>\r\n      <PostBody>{body}</PostBody>\r\n    </PostContainer>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n","import React, { useCallback, useContext, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { globalContext } from '../contexts/globalContext';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst PostsContainer = styled.div`\r\n  height: 65vh;\r\n\r\n  @media only screen and (min-width: 17.5em) and (min-height: 40em) {\r\n    height: 68vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    height: 69vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 45em) {\r\n    height: 71vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 25em) and (min-height: 50em) {\r\n    height: 71vh;\r\n  }\r\n\r\n  margin: 0 auto;\r\n  overflow-y: scroll;\r\n  padding: 1rem 0 1rem 6vw;\r\n\r\n  & > :not(:last-child) {\r\n    margin-bottom: var(--margin-sm);\r\n  }\r\n`;\r\n\r\nconst Posts = ({ inputRef }) => {\r\n  const { filteredPosts, setLoading, fetchPosts } = useContext(globalContext);\r\n\r\n  const observer = useRef();\r\n\r\n  const observePost = useCallback(\r\n    (node) => {\r\n      if (!node || filteredPosts.length === 100 || inputRef.current.value)\r\n        return;\r\n      if (!observer.current)\r\n        observer.current = new IntersectionObserver(intersectionHandler, {\r\n          threshold: 1,\r\n        });\r\n\r\n      observer.current.observe(node);\r\n    },\r\n    [filteredPosts]\r\n  );\r\n\r\n  const intersectionHandler = ([firstEntry]) => {\r\n    if (!firstEntry.isIntersecting || inputRef.current.value) return;\r\n    setLoading();\r\n    fetchPosts();\r\n    observer.current.unobserve(firstEntry.target);\r\n  };\r\n\r\n  return (\r\n    <PostsContainer>\r\n      {filteredPosts.map((post) => (\r\n        <SinglePost\r\n          key={post.id}\r\n          post={post}\r\n          observePost={post.id === filteredPosts.length ? observePost : null}\r\n        />\r\n      ))}\r\n    </PostsContainer>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFooter = styled.footer.attrs({ title: 'Visit GitHub page' })`\r\n  position: fixed;\r\n  bottom: 4vh;\r\n  left: 50%;\r\n  transform: translate(-50%, 50%);\r\n  font-size: 1.6rem;\r\n`;\r\n\r\nconst Link = styled.a.attrs({ target: '_blank', rel: 'noopener noreferrer' })`\r\n  color: inherit;\r\n`;\r\n\r\nconst GitHubLink = styled(Link).attrs({\r\n  href: 'https://github.com/xandert93',\r\n})``;\r\n\r\nconst Footer = () => (\r\n  <StyledFooter>\r\n    &copy; <GitHubLink>xandert.93</GitHubLink>\r\n  </StyledFooter>\r\n);\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.h1`\r\n  font-size: 2.8rem;\r\n  letter-spacing: 3px;\r\n  height: 15vh;\r\n  padding-top: 2.5rem;\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    height: 13vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 22.5em) and (min-height: 45em) {\r\n    height: 10vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 25em) and (min-height: 45em) {\r\n    height: 12vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 30em) and (max-height: 26em) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nconst Header = () => <StyledHeader>Infinite Scroll Blog</StyledHeader>;\r\n\r\nexport default Header;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(3rem);\r\n  }\r\n  to {\r\n    opacity: initial;\r\n    transform: initial;\r\n  }`;\r\n\r\nconst LoaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 5vh;\r\n  transition: opacity 0.3s ease-in;\r\n  animation: ${fadeIn} 1s;\r\n`;\r\n\r\nconst bounce = keyframes`\r\n  0%,\r\n  100% {\r\n    transform: initial;\r\n  }\r\n  50% {\r\n    transform: translateY(-5px);\r\n  }`;\r\n\r\nconst Circle = styled.div`\r\n  border-radius: 50%;\r\n  height: 0.6rem;\r\n  width: 0.6rem;\r\n  margin: 0 4px;\r\n  background: white;\r\n  animation: ${bounce} 0.5s ease-in infinite;\r\n`;\r\n\r\nconst CircleTwo = styled(Circle)`\r\n  animation-delay: 0.1s;\r\n`;\r\n\r\nconst CircleThree = styled(Circle)`\r\n  animation-delay: 0.2s;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <LoaderContainer>\r\n    <Circle />\r\n    <CircleTwo />\r\n    <CircleThree />\r\n  </LoaderContainer>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { globalContext } from '../contexts/globalContext';\r\n\r\nconst SearchInputBox = styled.div`\r\n  height: 10vh;\r\n\r\n  @media only screen and (min-width: 17.5em) and (min-height: 40em) {\r\n    height: 7vh;\r\n  }\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    height: 8vh;\r\n  }\r\n  @media only screen and (min-width: 22.5em) and (min-height: 45em) {\r\n    height: 7vh;\r\n  }\r\n  @media only screen and (min-width: 25em) and (min-height: 50em) {\r\n    height: 7vh;\r\n  }\r\n\r\n  @media only screen and (min-width: 30em) and (max-height: 22.5em) {\r\n    padding-bottom: 5rem;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input.attrs({ placeholder: 'Filter results...' })`\r\n  pointer-events: ${({ isLoading }) => (isLoading ? 'none' : 'auto')};\r\n  margin: 0 auto;\r\n  width: 80%;\r\n  height: 3rem;\r\n  max-width: 50rem;\r\n  transform: scale(0.93);\r\n  border: 3px solid rgb(255, 255, 255);\r\n  border-radius: var(--bord-rad-sm);\r\n  font-size: 1.6rem;\r\n  text-align: center;\r\n  transition: transform 0.3s, border-color 0.6s;\r\n\r\n  &::placeholder {\r\n    color: rgb(95, 95, 95);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    border-color: rgb(46, 189, 255);\r\n    transform: scale(1);\r\n  }\r\n`;\r\n\r\nconst SearchBar = ({ inputRef }) => {\r\n  let { filterPosts, isLoading } = useContext(globalContext);\r\n  const [userInput, setUserInput] = useState('');\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => filterPosts(userInput), [userInput]);\r\n\r\n  return (\r\n    <SearchInputBox>\r\n      <SearchInput\r\n        ref={inputRef}\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n        isLoading={isLoading}\r\n      />\r\n    </SearchInputBox>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n\r\n:root {\r\n  --box-shad-sm: 2px 2px 2px 2px rgba(0, 0, 0, 0.2);\r\n  --margin-xs: 1rem;\r\n  --margin-sm: 2rem;\r\n  --bord-rad-sm: 0.5rem;\r\n}\r\n\r\nhtml {\r\n  font-size: 62.5%;\r\n  @media only screen and (min-width: 22.5em) and (min-height: 40em) {\r\n    font-size: 75%;\r\n  }\r\n  @media only screen and (min-width: 25em) and (min-height: 45em) {\r\n    font-size: 81.25%;\r\n  }\r\n\r\n  @media only screen and (min-width: 30em) {\r\n    font-size: 81.25%;\r\n  }\r\n\r\n  @media only screen and (min-width: 35em) {\r\n    font-size: 87.5%;\r\n  }\r\n  @media only screen and (min-width: 45em) {\r\n    font-size: 93.75%;\r\n  }\r\n  @media only screen and (min-width: 55em) {\r\n    font-size: 100%;\r\n  }\r\n  @media only screen and (min-width: 65em) {\r\n    font-size: 106.25%;\r\n  }\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  box-sizing: border-box;\r\n  font-family: 'Questrial', sans-serif;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n#root {\r\n  height: 100vh;\r\n  background: linear-gradient(180deg, rgb(0, 77, 192), black 60%) no-repeat;\r\n  overflow: hidden;\r\n}\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 0.5rem;\r\n  /* display: none; */\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: rgba(255, 255, 255, 0.5);\r\n  border-radius: 5px;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: white;\r\n}\r\n\r\n`;\r\n","import Posts from './components/Posts';\r\nimport Footer from './components/layout/Footer';\r\nimport Header from './components/layout/Header';\r\nimport Loader from './components/layout/Loader';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nimport { useContext, useEffect, useRef } from 'react';\r\nimport { globalContext } from './contexts/globalContext';\r\nimport GlobalStyle from './theme/GlobalStyle';\r\n\r\nconst App = () => {\r\n  const { isLoading, filteredPosts, fetchPosts } = useContext(globalContext);\r\n  const inputRef = useRef();\r\n\r\n  useEffect(fetchPosts, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Header />\r\n      <SearchBar inputRef={inputRef} />\r\n      {filteredPosts.length === 0 && isLoading && <Loader />}\r\n      {filteredPosts.length > 0 && (\r\n        <>\r\n          <Posts inputRef={inputRef} />\r\n          {isLoading && <Loader />}\r\n        </>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const SET_LOADING = 'SET_LOADING';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const FILTER_POSTS = 'FILTER_POSTS';\r\nexport const SET_ERR_MSG = 'SET_ERR_MSG';\r\n","import { SET_LOADING, GET_POSTS, FILTER_POSTS, SET_ERR_MSG } from './actions';\r\n\r\nexport const appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        fetchedPosts: [...state.fetchedPosts, ...action.payload],\r\n        filteredPosts: [...state.fetchedPosts, ...action.payload],\r\n      };\r\n    case FILTER_POSTS:\r\n      return {\r\n        ...state,\r\n        filteredPosts: state.fetchedPosts.filter(\r\n          ({ title, body }) =>\r\n            title.includes(action.payload) || body.includes(action.payload)\r\n        ),\r\n      };\r\n    case SET_ERR_MSG:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        fetchedPosts: [],\r\n        errMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { globalContext, initialState } from './globalContext';\r\nimport { useCallback, useReducer } from 'react';\r\nimport { appReducer } from '../reducer/appReducer';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  GET_POSTS,\r\n  SET_ERR_MSG,\r\n  FILTER_POSTS,\r\n  SET_LOADING,\r\n} from '../reducer/actions';\r\n\r\nlet pageNumber = 1;\r\nlet baseUrl = 'https://jsonplaceholder.typicode.com/posts?_limit=10&_page=';\r\n\r\nconst GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const { fetchedPosts } = state;\r\n\r\n  const fetchPosts = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(baseUrl + pageNumber);\r\n\r\n      setTimeout(\r\n        () => {\r\n          dispatch({ type: GET_POSTS, payload: res.data });\r\n          pageNumber++;\r\n        },\r\n        fetchedPosts.length === 0 ? 3000 : 2000\r\n      );\r\n    } catch (err) {\r\n      dispatch({\r\n        type: SET_ERR_MSG,\r\n        payload: `There was an error: ${err.message}.`,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const setLoading = useCallback(() => dispatch({ type: SET_LOADING }), []);\r\n\r\n  const filterPosts = useCallback(\r\n    (userInput) =>\r\n      dispatch({\r\n        type: FILTER_POSTS,\r\n        payload: userInput.toLowerCase(),\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <globalContext.Provider\r\n      value={{ ...state, fetchPosts, setLoading, filterPosts }}\r\n    >\r\n      {children}\r\n    </globalContext.Provider>\r\n  );\r\n};\r\n\r\nexport { GlobalProvider };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalProvider } from './contexts/GlobalProvider';\n\nReactDOM.render(\n  <GlobalProvider>\n    <App />\n  </GlobalProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}